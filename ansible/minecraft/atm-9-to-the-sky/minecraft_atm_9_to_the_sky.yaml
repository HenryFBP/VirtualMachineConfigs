---
- name: Set up modded Minecraft server
  hosts: localhost:all
  become: yes
  vars:
    # modpack server zip
    modpack_server_zip_url: "https://mediafilez.forgecdn.net/files/5399/299/server-1.0.1.zip"

    # the name of the modpack server zip file
    modpack_server_zip_file: "atm-9-to-the-sky-server-1.0.1.zip"

    # the version of the modpack
    modpack_version: "1.0.1"

    # the folder name for the Minecraft server
    minecraft_folder_name: "atm-9-to-the-sky"

    # the name of the systemd service
    minecraft_service_name: "minecraft-atm-9-to-the-sky"

    
  tasks:

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install unzip
      apt:
        name: unzip
        state: present

    - name: Ensure Java 17 is installed
      apt:
        name: openjdk-17-jre
        state: present

    - name: Ensure Java 17 is the default Java
      alternatives:
        name: java
        path: /usr/lib/jvm/java-17-openjdk-amd64/bin/java


    - name: Create minecraft user
      user:
        name: minecraft
        state: present

    - name: Create a directory for the Minecraft server
      file:
        path: "/opt/minecraft/{{ minecraft_folder_name }}"
        state: directory
        owner: minecraft
        group: minecraft
        mode: '0755'

    - name: Download modpack
      get_url:
        url: "{{ modpack_server_zip_url }}"
        dest: "/opt/minecraft/{{ minecraft_folder_name }}/{{ modpack_server_zip_file }}"
        mode: '0755'

    - name: Extract modpack with unzip
      shell: |
        cd "/opt/minecraft/{{ minecraft_folder_name }}"
        if [ ! -f ./startserver.sh ]; then
          echo "Extracting server modpack..."
          unzip "{{ modpack_server_zip_file }}"
        else
          echo "Server already extracted. Skipping."
        fi

    - name: "Flatten folder structure"
      shell: |
        cd "/opt/minecraft/{{ minecraft_folder_name }}"
        mv ./server-1.0.1/* ./
        rm -r ./server-1.0.1/ || true

    - name: Accept EULA
      copy:
        dest: "/opt/minecraft/{{minecraft_folder_name}}/eula.txt"
        content: "eula=true"

    - name: Run server install script
      command: "java -jar forge-1.20.1-47.2.20-installer.jar --installServer"
      args:
        chdir: "/opt/minecraft/{{minecraft_folder_name}}"

    - name: Create required files
      file:
        path: "/opt/minecraft/{{minecraft_folder_name}}/user_jvm_args.txt"
        state: touch
        mode: '0755'

    - name: Create required files
      file:
        path: "/opt/minecraft/{{minecraft_folder_name}}/libraries/net/minecraftforge/forge/1.20.1-47.2.20/unix_args.txt"
        state: touch
        mode: '0755'

    - name: Create a systemd service for Minecraft
      copy:
        dest: /etc/systemd/system/{{minecraft_service_name}}.service
        content: |
          [Unit]
          Description=Minecraft Server
          After=network.target

          [Service]
          User=minecraft
          WorkingDirectory=/opt/minecraft/{{minecraft_folder_name}}
          ExecStart=java -Xms2G -Xmx4G -jar forge-1.16.5-36.1.0.jar nogui
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target

    - name: Set permissions for the entire minecraft folder
      file:
        path: "/opt/minecraft/"
        state: directory
        recurse: yes
        owner: minecraft
        group: minecraft

    - name: Start and enable the Minecraft server
      systemd:
        name: "{{minecraft_service_name}}"
        state: started
        enabled: yes

    - name: Wait for the Minecraft server to start
      wait_for:
        port: 25565
        delay: 10
        timeout: 300

    - name: Restart the Minecraft server
      systemd:
        name: "{{minecraft_service_name}}"
        state: restarted

    - name: Check the status and logs of the Minecraft server
      shell: |
        systemctl status {{minecraft_service_name}}
        journalctl -u {{minecraft_service_name}}
      register: minecraft_status

    - name: Connect to TCP port 25565 to verify the Minecraft server is running
      wait_for:
        host: "{{ ansible_host }}"
        port: 25565
        timeout: 300